id: 01-003
phase: 1
title: Create component data models
description: |
  Define dataclasses for representing component data from jlcparts database.
  Match the database schema structure for easy querying.
dependencies:
  - 01-001
acceptance_criteria:
  - Component dataclass created matching jlcparts database schema
  - Includes fields from database: lcsc, mfr, description, category, subcategory
  - ComponentSpecs for normalized attributes (from database attributes column)
  - Price dataclass for pricing tiers (from price JSON field)
  - Type hints used throughout
  - Validation for required fields
  - Tests for dataclass behavior
  - from_db_row() class method to construct from SQLite row
estimated_complexity: low
status: completed
notes: |
  Use Python dataclasses with type hints.
  jlcparts database has normalized attributes in JSON format.
  Fields include: lcsc (part number), mfr (manufacturer part number),
  description, category, subcategory, manufacturer, joints (pin count),
  basic (basic/extended flag), stock, price (JSON with tiers),
  attributes (JSON with normalized specs like voltage, capacitance, etc.)
  Match their schema for compatibility.
