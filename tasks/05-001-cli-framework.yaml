id: 05-001
phase: 5
title: Set up CLI framework (OPTIONAL)
description: |
  Create optional CLI tool for scripting/automation. Primary interface is MCP,
  but CLI is useful for non-interactive use cases (scripts, CI/CD, testing).
  This is a THIN WRAPPER around core library.
dependencies:
  - 00-001
acceptance_criteria:
  - CLI framework chosen and installed (Typer recommended)
  - Entry point created (jlc_has_it/cli/main.py)
  - --help works and shows useful information
  - --version shows project version
  - CLI installable: jlc-has-it (separate from jlc-has-it-mcp)
  - Simple wrapper - delegates to core library
  - No complex UI needed (MCP is primary interface)
estimated_complexity: low
status: pending
notes: |
  OPTIONAL TASK - Phase 1 focuses on MCP.
  CLI is helpful for:
  - Automation/scripting
  - CI/CD pipelines
  - Testing without LLM
  - Users without Claude Code

  Keep it SIMPLE:
  - Thin wrapper around core library
  - Basic commands only
  - No need for fancy UI (that's what MCP/Claude is for)

  Entry point in pyproject.toml:
  [project.scripts]
  jlc-has-it = "jlc_has_it.cli:main"
  jlc-has-it-mcp = "jlc_has_it.mcp:main"
